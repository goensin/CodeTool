<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes">

    <Style x:Key="RubyerWindow" TargetType="Window">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="32" CornerRadius="0" GlassFrameThickness="1"
                              UseAeroCaptionButtons="False" NonClientFrameEdges="None" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <ControlTemplate.Resources>
                    </ControlTemplate.Resources>
                    <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <AdornerDecorator>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="32"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <!--title bar-->
                                <Grid Grid.Row="0" Background="{DynamicResource PrimaryHueMidBrush}">
                                    <Image Source="{TemplateBinding Icon}" Height="24" Width="24" Margin="10 0" HorizontalAlignment="Left"/>
                                    <TextBlock Text="{TemplateBinding Title}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                               FontSize="20" Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 0 2 0">
                                        <StackPanel.Resources>
                                            <Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatMidBgButton}">
                                                <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                                                <Setter Property="Padding" Value="12 0"/>
                                                <Setter Property="Margin" Value="0"/>
                                                <Setter Property="IsTabStop" Value="False"/>
                                                <Setter Property="Cursor" Value="Arrow"/>
                                                <Setter Property="Height" Value="30"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>

                                            <Style x:Key="NormalButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowButtonStyle}">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Value="Normal">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>

                                            <Style x:Key="MaximizedButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowButtonStyle}">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Value="Maximized">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>

                                            <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowButtonStyle}">
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="Red"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Resources>

                                        <Button Style="{StaticResource WindowButtonStyle}" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <ei:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" PropertyName="WindowState" Value="Minimized"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            <md:PackIcon Kind="WindowMinimize" Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                        </Button>
                                        <Button Style="{StaticResource NormalButtonStyle}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <ei:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" PropertyName="WindowState" Value="Normal"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            <md:PackIcon Kind="WindowRestore" Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                        </Button>
                                        <Button Style="{StaticResource MaximizedButtonStyle}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <ei:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" PropertyName="WindowState" Value="Maximized"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            <md:PackIcon Kind="WindowMaximize"  Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                        </Button>
                                        <Button Style="{StaticResource CloseButtonStyle}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <ei:CallMethodAction TargetObject="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" MethodName="Close" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            <md:PackIcon Kind="WindowClose" Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                        </Button>
                                    </StackPanel>
                                </Grid>

                                <!--content-->
                                <Grid Grid.Row="1">
                                    <ContentPresenter/>
                                </Grid>
                            </Grid>
                        </AdornerDecorator>
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderThickness" Value="0"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState}" Value="Maximized">
                                        <Setter Property="Padding" Value="8"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>